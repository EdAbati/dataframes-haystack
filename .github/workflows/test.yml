name: ðŸ”Ž Run Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: test-${{ github.head_ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  run:
    name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up uv
      if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
      run: curl -LsSf https://astral.sh/uv/install.sh | sh

    - name: Set up uv
      if: ${{ matrix.os == 'windows-latest' }}
      run: irm https://astral.sh/uv/install.ps1 | iex
      shell: powershell

    - name: Set uv path for hatch
      run: echo "HATCH_ENV_TYPE_VIRTUAL_UV_PATH=$(which uv)" >> $GITHUB_ENV
      shell: bash

    - name: Install Hatch
      if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
      run: uv tool install --upgrade hatch

    - name: Install Hatch
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        uv tool install --upgrade hatch
        $env:PATH = "C:`\Users`\runneradmin`\.local`\bin;$env:PATH"

    # - name: Run mypy types checking
    #   run: hatch run types:check

    - name: Run unit tests
      run: hatch run test-cov-all
